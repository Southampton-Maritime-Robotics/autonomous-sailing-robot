#!/usr/bin/env python
# this line is needed so the execution happens in python environment

import rospy
from boat_functions.msg import boat_3d
from std_msgs.msg import Header


ENDPOINT = [0.,0.,0.2]
ACCURACY = 0.2 
wp_plan = [[1.1,2.2,0], [1.1,1.1,0.], [0.,0.,0.]]
publishWaypoint = rospy.Publisher('ActiveWaypoint', boat_3d, queue_size = 10)


def get_active_waypoint(current_point):
    """
    update waypoint list, return first waypoint in list
    """
    wp_active = wp_plan[len(wp_plan)-1]
    # compare current point with goal waypoint
    # TODO get distance from goal waypoint 
    if ((current_point[0] < (wp_active[0] + ACCURACY))
    and (current_point[0] > (wp_active[0] - ACCURACY))):
        if ((current_point[1] < (wp_active[1] + ACCURACY))
        and (current_point[1] > (wp_active[1] - ACCURACY))):
            wp_plan.pop()
            try:
                wp_active = wp_plan[len(wp_plan)-1]
            except:
                wp_active = ENDPOINT
                rospy.loginfo('reached endpoint')

    return wp_active

def init_mission_talker():
    rospy.init_node('mission_planner', anonymous=True)
    


def mission_talker(gps_position):
    h = Header()
    if not rospy.is_shutdown():
        wp = get_active_waypoint(gps_position)
        rospy.loginfo('active waypoint' + str(wp))
        #update header time
        h.stamp = rospy.Time.now()
        wp_msg = boat_3d(h, wp[0], wp[1], wp[2])
        publishWaypoint.publish(wp_msg)


def mission_react_to_gps():
    r = rospy.Rate(2)
    while not rospy.is_shutdown():
        gps_position = [0., 0., 0.]
        mission_talker(gps_position)
        r.sleep()

if __name__ == '__main__':
    try:
        init_mission_talker()
        mission_react_to_gps()
    except rospy.ROSInterruptException: pass
