#!/usr/bin/env python
# this line is needed so the execution happens in python environment

"""
Script to calculate and publish
goal heading

"""
import rospy
from std_msgs.msg import Int64
from std_msgs.msg import Header
from boat_functions.msg import boat_3d
from sensor_msgs.msg import NavSatFix
from boat_goal_heading import goalHeading as goal
import time

class headingNavigation:
    waypoint = [0,0] # goal waypoint that the boat tries to reach
    position = [0,0] # current position/last known position


def store_waypoint(wp):
    goalHeadingIN.waypoint = [wp.x_value, wp.y_value]

def publish_heading(position):
     h = Header()
     if not rospy.is_shutdown():
         goalHeadingIN.position = position
         heading = goal.calc_heading(
                    goalHeadingIN.position, 
                    goalHeadingIN.waypoint)
         rospy.loginfo('goal heading' + str(heading))
         #update header time
         h.stamp = rospy.Time.now()
         # TODO: switch to heading message that includes header
         publishHeading.publish(heading)



def heading_react():
    print("check 2")
    rospy.Subscriber("/sensors/fix", NavSatFix, publish_heading)
    rospy.Subscriber("/sensors/simulatedFix", NavSatFix, publish_heading)

    #also update if a waypoint is published
    rospy.Subscriber("/planning/ActiveWaypoint", boat_3d, store_waypoint)
    print("spinning")
    rospy.spin()

if __name__ == '__main__':
    try:
        rospy.init_node('heading_talker', anonymous=True)
        publishHeading = rospy.Publisher('GoalHeading', Int64, queue_size=10)
        print("check 1")
        heading_react()

    except rospy.ROSInterruptException: pass
